--- (raíz)

// >>> build.gradle
// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
alias(libs.plugins.android.application) apply false
}

// >>> concat_and_list.py
#!/usr/bin/env python3
import os
import csv
from collections import defaultdict

# ------------------------------------------------------------------
# 1) CONFIGURACIÓN DE EXTENSIONES Y NOMBRES CLAVE
# ------------------------------------------------------------------

# Extensiones a incluir en la concatenación
INCLUDE_EXT = {
    # Lenguajes de programación
    ".java", ".py", ".dart", ".kt", ".scala", ".js", ".ts", ".jsx", ".tsx",
    ".c", ".cpp", ".cs", ".go", ".rb", ".php", ".swift", ".m", ".mm",
    ".pl", ".sh", ".bash", ".ps1", ".bat", ".cmd", ".groovy", ".r",
    # Configuración y recursos
    ".xml", ".jrxml", ".pom", ".gradle", ".fxml", ".properties", ".env",
    ".json", ".yml", ".yaml", ".toml", ".ini", ".conf", ".cfg",
    ".sql", ".html", ".css", ".scss", ".less", ".md", ".jsp", ".ftl",
    # Otros útiles
    ".log", ".csv", ".tsv", ".proto", ".graphql", ".gql", ".vue", ".svelte",
}

# Archivos sin extensión a incluir siempre
IMPORTANT_FILENAMES = {
    "Dockerfile", "Makefile", "Procfile",
    "README", "README.md", "LICENSE", "Pipfile", "requirements.txt"
}

# Directorios a excluir (control de versiones, builds, dependencias…)
EXCLUDE_DIRS = {
    ".git", ".hg", ".svn",
    "node_modules", "target", "build", "dist", "__pycache__",
    "venv", ".venv", "env", "bin", "obj"
}

# Extensiones de archivos binarios a excluir
EXCLUDE_FILES_EXT = {
    ".class", ".jar", ".exe", ".dll", ".so", ".dylib",
    ".pyc", ".pyo", ".o", ".obj", ".lib", ".a",
    ".war", ".ear", ".apk", ".ipa"
}

# ------------------------------------------------------------------
# 2) PREPARAR RUTAS Y NOMBRES DE SALIDA
# ------------------------------------------------------------------

ROOT = os.getcwd()
PROJECT_NAME = os.path.basename(ROOT.rstrip(os.sep))
OUT_TXT = f"{PROJECT_NAME}.txt"
OUT_CSV = f"{PROJECT_NAME}_estructura.csv"

# ------------------------------------------------------------------
# 3) RECORRER Y AGRUPAR
# ------------------------------------------------------------------

groups = defaultdict(list)
all_entries = []  # [(ruta_relativa, "File"/"Directory")]

for dirpath, dirnames, filenames in os.walk(ROOT):
    # Excluir carpetas irrelevantes
    dirnames[:] = [d for d in dirnames if d not in EXCLUDE_DIRS]
    rel_dir = os.path.relpath(dirpath, ROOT)
    all_entries.append((rel_dir or PROJECT_NAME, "Directory"))

    for fname in filenames:
        full = os.path.join(dirpath, fname)
        rel = os.path.relpath(full, ROOT)
        all_entries.append((rel, "File"))

        base, ext = os.path.splitext(fname)
        ext = ext.lower()

        # Decidir inclusión en la concatenación
        if (
            ext in INCLUDE_EXT
            or fname in IMPORTANT_FILENAMES
        ) and not any(fname.lower().endswith(x) for x in EXCLUDE_FILES_EXT):
            groups[rel_dir].append(full)

# ------------------------------------------------------------------
# 4) ESCRIBIR ARCHIVO TXT CONCATENADO
# ------------------------------------------------------------------

with open(OUT_TXT, "w", encoding="utf-8") as out:
    for folder in sorted(groups):
        header = folder if folder != "." else "(raíz)"
        out.write(f"--- {header}\n\n")
        for filepath in sorted(groups[folder]):
            name = os.path.basename(filepath)
            out.write(f"// >>> {name}\n")
            # Leer con fallback de codificación
            content = ""
            for enc in ("utf-8", "latin-1"):
                try:
                    with open(filepath, "r", encoding=enc) as src:
                        content = src.read()
                    break
                except UnicodeDecodeError:
                    continue
                except Exception as e:
                    content = f"[¡Error leyendo {name}: {e}]\n"
                    break
            out.write(content)
            out.write("\n\n")
print(f"✔ Contenido esencial concatenado en: {OUT_TXT}")

# ------------------------------------------------------------------
# 5) ESCRIBIR CSV DE ESTRUCTURA COMPLETA
# ------------------------------------------------------------------

with open(OUT_CSV, "w", newline="", encoding="utf-8") as csvf:
    writer = csv.writer(csvf)
    writer.writerow(["Path", "Type"])
    # Incluir la raíz
    writer.writerow([PROJECT_NAME, "Directory"])
    for rel, typ in sorted(all_entries):
        if rel == ".":
            continue
        writer.writerow([rel, typ])
print(f"✔ Estructura completa exportada en: {OUT_CSV}")


// >>> gradle.properties
# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. For more details, visit
# https://developer.android.com/r/tools/gradle-multi-project-decoupled-projects
# org.gradle.parallel=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Enables namespacing of each library's R class so that its R class includes only the
# resources declared in the library itself and none from the library's dependencies,
# thereby reducing the size of the R class for that library
android.nonTransitiveRClass=true

// >>> gradlew.bat
@rem
@rem Copyright 2015 the original author or authors.
@rem
@rem Licensed under the Apache License, Version 2.0 (the "License");
@rem you may not use this file except in compliance with the License.
@rem You may obtain a copy of the License at
@rem
@rem      https://www.apache.org/licenses/LICENSE-2.0
@rem
@rem Unless required by applicable law or agreed to in writing, software
@rem distributed under the License is distributed on an "AS IS" BASIS,
@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@rem See the License for the specific language governing permissions and
@rem limitations under the License.
@rem

@if "%DEBUG%" == "" @echo off
@rem ##########################################################################
@rem
@rem  Gradle startup script for Windows
@rem
@rem ##########################################################################

@rem Set local scope for the variables with windows NT shell
if "%OS%"=="Windows_NT" setlocal

set DIRNAME=%~dp0
if "%DIRNAME%" == "" set DIRNAME=.
set APP_BASE_NAME=%~n0
set APP_HOME=%DIRNAME%

@rem Resolve any "." and ".." in APP_HOME to make it shorter.
for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi

@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"

@rem Find java.exe
if defined JAVA_HOME goto findJavaFromJavaHome

set JAVA_EXE=java.exe
%JAVA_EXE% -version >NUL 2>&1
if "%ERRORLEVEL%" == "0" goto execute

echo.
echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
echo.
echo Please set the JAVA_HOME variable in your environment to match the
echo location of your Java installation.

goto fail

:findJavaFromJavaHome
set JAVA_HOME=%JAVA_HOME:"=%
set JAVA_EXE=%JAVA_HOME%/bin/java.exe

if exist "%JAVA_EXE%" goto execute

echo.
echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
echo.
echo Please set the JAVA_HOME variable in your environment to match the
echo location of your Java installation.

goto fail

:execute
@rem Setup the command line

set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar


@rem Execute Gradle
"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %*

:end
@rem End local scope for the variables with windows NT shell
if "%ERRORLEVEL%"=="0" goto mainEnd

:fail
rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
rem the _cmd.exe /c_ return code!
if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
exit /b 1

:mainEnd
if "%OS%"=="Windows_NT" endlocal

:omega


// >>> local.properties
## This file is automatically generated by Android Studio.
# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
#
# This file should *NOT* be checked into Version Control Systems,
# as it contains information specific to your local configuration.
#
# Location of the SDK. This is only used by Gradle.
# For customization when using a Version Control System, please read the
# header note.
sdk.dir=C\:\\Users\\Administrador\\AppData\\Local\\Android\\Sdk

// >>> settings.gradle
pluginManagement {
    repositories {
        google {
            content {
                includeGroupByRegex("com\\.android.*")
                includeGroupByRegex("com\\.google.*")
                includeGroupByRegex("androidx.*")
            }
        }
        mavenCentral()
        gradlePluginPortal()
    }
}
plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.8.0'
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.name = "MiAbue"
include ':app'


--- .gradle

// >>> config.properties
#Sun Jul 27 23:05:09 BOT 2025
java.home=C\:\\Program Files\\Android\\Android Studio\\jbr


--- .gradle\8.11.1

// >>> gc.properties


--- .gradle\8.13

// >>> gc.properties


--- .gradle\buildOutputCleanup

// >>> cache.properties
#Mon Jul 28 01:03:22 BOT 2025
gradle.version=8.13


--- .gradle\vcs-1

// >>> gc.properties


--- .idea

// >>> AndroidProjectSystem.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AndroidProjectSystem">
    <option name="providerId" value="com.android.tools.idea.GradleProjectSystem" />
  </component>
</project>

// >>> assetWizardSettings.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="WizardSettings">
    <option name="children">
      <map>
        <entry key="imageWizard">
          <value>
            <PersistentState>
              <option name="children">
                <map>
                  <entry key="imageAssetPanel">
                    <value>
                      <PersistentState>
                        <option name="children">
                          <map>
                            <entry key="actionbar">
                              <value>
                                <PersistentState>
                                  <option name="children">
                                    <map>
                                      <entry key="clipArt">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                                <entry key="imagePath" value="C:\Users\Administrador\AppData\Local\Temp\ic_android_black_24dp.xml" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="text">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="textAsset">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                    </map>
                                  </option>
                                </PersistentState>
                              </value>
                            </entry>
                            <entry key="launcher">
                              <value>
                                <PersistentState>
                                  <option name="children">
                                    <map>
                                      <entry key="foregroundClipArt">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="imagePath" value="C:\Users\Administrador\AppData\Local\Temp\ic_android_black_24dp.xml" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="foregroundImage">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                                <entry key="imagePath" value="C:\Users\Administrador\Downloads\ic_launcher.webp" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="foregroundText">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="foregroundTextAsset">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                    </map>
                                  </option>
                                </PersistentState>
                              </value>
                            </entry>
                            <entry key="launcherLegacy">
                              <value>
                                <PersistentState>
                                  <option name="children">
                                    <map>
                                      <entry key="clipArt">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                                <entry key="imagePath" value="C:\Users\Administrador\AppData\Local\Temp\ic_android_black_24dp.xml" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="text">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="textAsset">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                    </map>
                                  </option>
                                </PersistentState>
                              </value>
                            </entry>
                            <entry key="notification">
                              <value>
                                <PersistentState>
                                  <option name="children">
                                    <map>
                                      <entry key="clipArt">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                                <entry key="imagePath" value="C:\Users\Administrador\AppData\Local\Temp\ic_android_black_24dp.xml" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="text">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="textAsset">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                    </map>
                                  </option>
                                </PersistentState>
                              </value>
                            </entry>
                            <entry key="tvBanner">
                              <value>
                                <PersistentState>
                                  <option name="children">
                                    <map>
                                      <entry key="foregroundText">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                    </map>
                                  </option>
                                </PersistentState>
                              </value>
                            </entry>
                            <entry key="tvChannel">
                              <value>
                                <PersistentState>
                                  <option name="children">
                                    <map>
                                      <entry key="foregroundClipArt">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="imagePath" value="C:\Users\Administrador\AppData\Local\Temp\ic_android_black_24dp.xml" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="foregroundImage">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="foregroundText">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                      <entry key="foregroundTextAsset">
                                        <value>
                                          <PersistentState>
                                            <option name="values">
                                              <map>
                                                <entry key="color" value="000000" />
                                              </map>
                                            </option>
                                          </PersistentState>
                                        </value>
                                      </entry>
                                    </map>
                                  </option>
                                </PersistentState>
                              </value>
                            </entry>
                          </map>
                        </option>
                      </PersistentState>
                    </value>
                  </entry>
                </map>
              </option>
            </PersistentState>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>

// >>> compiler.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CompilerConfiguration">
    <bytecodeTargetLevel target="17" />
  </component>
</project>

// >>> deploymentTargetSelector.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="deploymentTargetSelector">
    <selectionStates>
      <SelectionState runConfigName="app">
        <option name="selectionMode" value="DROPDOWN" />
        <DropdownSelection timestamp="2025-07-28T19:32:51.428894100Z">
          <Target type="DEFAULT_BOOT">
            <handle>
              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\Administrador\.android\avd\Pixel_9_Pro_MiAbue.avd" />
            </handle>
          </Target>
        </DropdownSelection>
        <DialogSelection />
      </SelectionState>
    </selectionStates>
  </component>
</project>

// >>> deviceManager.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="DeviceTable">
    <option name="columnSorters">
      <list>
        <ColumnSorterState>
          <option name="column" value="Name" />
          <option name="order" value="DESCENDING" />
        </ColumnSorterState>
      </list>
    </option>
  </component>
</project>

// >>> gradle.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="GradleMigrationSettings" migrationVersion="1" />
  <component name="GradleSettings">
    <option name="linkedExternalProjectsSettings">
      <GradleProjectSettings>
        <option name="testRunner" value="CHOOSE_PER_TEST" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="gradleJvm" value="#GRADLE_LOCAL_JAVA_HOME" />
        <option name="modules">
          <set>
            <option value="$PROJECT_DIR$" />
            <option value="$PROJECT_DIR$/app" />
          </set>
        </option>
      </GradleProjectSettings>
    </option>
  </component>
</project>

// >>> migrations.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ProjectMigrations">
    <option name="MigrateToGradleLocalJavaHome">
      <set>
        <option value="$PROJECT_DIR$" />
      </set>
    </option>
  </component>
</project>

// >>> misc.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ExternalStorageConfigurationManager" enabled="true" />
  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="jbr-21" project-jdk-type="JavaSDK">
    <output url="file://$PROJECT_DIR$/build/classes" />
  </component>
  <component name="ProjectType">
    <option name="id" value="Android" />
  </component>
</project>

// >>> render.experimental.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="RenderSettings">
    <option name="showDecorations" value="true" />
  </component>
</project>

// >>> runConfigurations.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="RunConfigurationProducerService">
    <option name="ignoredProducers">
      <set>
        <option value="com.intellij.execution.junit.AbstractAllInDirectoryConfigurationProducer" />
        <option value="com.intellij.execution.junit.AllInPackageConfigurationProducer" />
        <option value="com.intellij.execution.junit.PatternConfigurationProducer" />
        <option value="com.intellij.execution.junit.TestInClassConfigurationProducer" />
        <option value="com.intellij.execution.junit.UniqueIdConfigurationProducer" />
        <option value="com.intellij.execution.junit.testDiscovery.JUnitTestDiscoveryConfigurationProducer" />
        <option value="org.jetbrains.kotlin.idea.junit.KotlinJUnitRunConfigurationProducer" />
        <option value="org.jetbrains.kotlin.idea.junit.KotlinPatternConfigurationProducer" />
      </set>
    </option>
  </component>
</project>

// >>> workspace.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AndroidLayouts">
    <shared>
      <config />
    </shared>
    <layouts>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/drawable/circle_background.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/drawable/ic_back.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/drawable/ic_emergency.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/drawable/ic_empty_medications.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/drawable/ic_launcher_background.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/drawable/ic_launcher_foreground.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/drawable/ic_medical_bag.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/drawable/ic_medication.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/drawable/ic_miabue_logo.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/drawable/ic_save.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/layout/activity_medication.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/layout/activity_treatment.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
      <layout url="file://$PROJECT_DIR$/app/src/main/res/layout/item_medication.xml">
        <config>
          <theme>@style/Theme.AppMiAbue</theme>
        </config>
      </layout>
    </layouts>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f825cddf-5700-4924-9268-e7df7d46eac5" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[]" />
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="30UAj99PKx1gSQ80Mfb9qbbkEJg" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Android App.app.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Administrador/AndroidStudioProjects/MiAbue/app/src/main/res&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.17&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;AndroidSdkUpdater&quot;
  }
}</component>
  <component name="PsdUISettings">
    <option name="MODULE_TAB" value="Properties" />
    <option name="LAST_EDITED_SIGNING_CONFIG" value="debug" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Administrador\AndroidStudioProjects\MiAbue\app\src\main\res" />
      <recent name="C:\Users\Administrador\AndroidStudioProjects\MiAbue\app\src\main\res\drawable" />
      <recent name="C:\Users\Administrador\AndroidStudioProjects\MiAbue\app\src\main\java\com\miabue\miabue" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.miabue.miabue.adapters" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="app" type="AndroidRunConfigurationType" factoryName="Android App" activateToolWindowBeforeRun="false">
      <module name="MiAbue.app" />
      <option name="ANDROID_RUN_CONFIGURATION_SCHEMA_VERSION" value="1" />
      <option name="DEPLOY" value="true" />
      <option name="DEPLOY_APK_FROM_BUNDLE" value="false" />
      <option name="DEPLOY_AS_INSTANT" value="false" />
      <option name="ARTIFACT_NAME" value="" />
      <option name="PM_INSTALL_OPTIONS" value="" />
      <option name="ALL_USERS" value="false" />
      <option name="ALWAYS_INSTALL_WITH_PM" value="false" />
      <option name="ALLOW_ASSUME_VERIFIED" value="false" />
      <option name="CLEAR_APP_STORAGE" value="false" />
      <option name="DYNAMIC_FEATURES_DISABLED_LIST" value="" />
      <option name="ACTIVITY_EXTRA_FLAGS" value="" />
      <option name="MODE" value="default_activity" />
      <option name="RESTORE_ENABLED" value="false" />
      <option name="RESTORE_FILE" value="" />
      <option name="RESTORE_FRESH_INSTALL_ONLY" value="false" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />
      <option name="TARGET_SELECTION_MODE" value="DEVICE_AND_SNAPSHOT_COMBO_BOX" />
      <option name="SELECTED_CLOUD_MATRIX_CONFIGURATION_ID" value="-1" />
      <option name="SELECTED_CLOUD_MATRIX_PROJECT_ID" value="" />
      <option name="DEBUGGER_TYPE" value="Auto" />
      <Auto>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
        <option name="ATTACH_ON_WAIT_FOR_DEBUGGER" value="false" />
        <option name="DEBUG_SANDBOX_SDK" value="false" />
      </Auto>
      <Hybrid>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
        <option name="ATTACH_ON_WAIT_FOR_DEBUGGER" value="false" />
        <option name="DEBUG_SANDBOX_SDK" value="false" />
      </Hybrid>
      <Java>
        <option name="ATTACH_ON_WAIT_FOR_DEBUGGER" value="false" />
        <option name="DEBUG_SANDBOX_SDK" value="false" />
      </Java>
      <Native>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
        <option name="ATTACH_ON_WAIT_FOR_DEBUGGER" value="false" />
        <option name="DEBUG_SANDBOX_SDK" value="false" />
      </Native>
      <Profilers>
        <option name="ADVANCED_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_CPU_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_CPU_PROFILING_CONFIGURATION_NAME" value="Java/Kotlin Method Sample (legacy)" />
        <option name="STARTUP_NATIVE_MEMORY_PROFILING_ENABLED" value="false" />
        <option name="NATIVE_MEMORY_SAMPLE_RATE_BYTES" value="2048" />
      </Profilers>
      <option name="DEEP_LINK" value="" />
      <option name="ACTIVITY" value="" />
      <option name="ACTIVITY_CLASS" value="com.miabue.app.MainActivity" />
      <option name="SEARCH_ACTIVITY_IN_GLOBAL_SCOPE" value="false" />
      <option name="SKIP_ACTIVITY_VALIDATION" value="true" />
      <method v="2">
        <option name="Android.Gradle.BeforeRunTask" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f825cddf-5700-4924-9268-e7df7d46eac5" name="Changes" comment="" />
      <created>1753671910103</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1753671910103</updated>
    </task>
    <servers />
  </component>
  <component name="play_dynamic_filters_status">
    <option name="appIdToCheckInfo">
      <map>
        <entry key="com.miabue.app">
          <value>
            <CheckInfo lastCheckTimestamp="1753673835988" />
          </value>
        </entry>
        <entry key="com.miabue.app.test">
          <value>
            <CheckInfo lastCheckTimestamp="1753673835986" />
          </value>
        </entry>
        <entry key="com.miabue.miabue">
          <value>
            <CheckInfo lastCheckTimestamp="1753672005448" />
          </value>
        </entry>
        <entry key="com.miabue.miabue.test">
          <value>
            <CheckInfo lastCheckTimestamp="1753672005448" />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>

--- .idea\caches

// >>> deviceStreaming.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="DeviceStreaming">
    <option name="deviceSelectionList">
      <list>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="Sony" />
          <option name="codename" value="A402SO" />
          <option name="id" value="A402SO" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Sony" />
          <option name="name" value="Xperia 10" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2520" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="27" />
          <option name="brand" value="DOCOMO" />
          <option name="codename" value="F01L" />
          <option name="id" value="F01L" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="FUJITSU" />
          <option name="name" value="F-01L" />
          <option name="screenDensity" value="360" />
          <option name="screenX" value="720" />
          <option name="screenY" value="1280" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="OnePlus" />
          <option name="codename" value="OP535DL1" />
          <option name="id" value="OP535DL1" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="OnePlus" />
          <option name="name" value="CPH2409" />
          <option name="screenDensity" value="401" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2412" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="OnePlus" />
          <option name="codename" value="OP5552L1" />
          <option name="id" value="OP5552L1" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="OnePlus" />
          <option name="name" value="CPH2415" />
          <option name="screenDensity" value="480" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2412" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="OPPO" />
          <option name="codename" value="OP573DL1" />
          <option name="id" value="OP573DL1" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="OPPO" />
          <option name="name" value="CPH2557" />
          <option name="screenDensity" value="480" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="28" />
          <option name="brand" value="DOCOMO" />
          <option name="codename" value="SH-01L" />
          <option name="id" value="SH-01L" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="SHARP" />
          <option name="name" value="AQUOS sense2 SH-01L" />
          <option name="screenDensity" value="480" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2160" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="a14m" />
          <option name="id" value="a14m" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="SM-A145R" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2408" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="a15" />
          <option name="id" value="a15" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="A15" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2340" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="a15x" />
          <option name="id" value="a15x" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="A15 5G" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2340" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="a16x" />
          <option name="id" value="a16x" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="A16 5G" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2340" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="a35x" />
          <option name="id" value="a35x" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="A35" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2340" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="google" />
          <option name="codename" value="akita" />
          <option name="id" value="akita" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 8a" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="35" />
          <option name="brand" value="google" />
          <option name="codename" value="akita" />
          <option name="id" value="akita" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 8a" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="motorola" />
          <option name="codename" value="arcfox" />
          <option name="id" value="arcfox" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="razr plus 2024" />
          <option name="screenDensity" value="360" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="1272" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="motorola" />
          <option name="codename" value="austin" />
          <option name="id" value="austin" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="moto g 5G (2022)" />
          <option name="screenDensity" value="280" />
          <option name="screenX" value="720" />
          <option name="screenY" value="1600" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="samsung" />
          <option name="codename" value="b0q" />
          <option name="id" value="b0q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy S22 Ultra" />
          <option name="screenDensity" value="600" />
          <option name="screenX" value="1440" />
          <option name="screenY" value="3088" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="b6q" />
          <option name="id" value="b6q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Flip 6" />
          <option name="screenDensity" value="340" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2640" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="32" />
          <option name="brand" value="google" />
          <option name="codename" value="bluejay" />
          <option name="id" value="bluejay" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 6a" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="google" />
          <option name="codename" value="caiman" />
          <option name="id" value="caiman" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 9 Pro" />
          <option name="screenDensity" value="360" />
          <option name="screenX" value="960" />
          <option name="screenY" value="2142" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="35" />
          <option name="brand" value="google" />
          <option name="codename" value="caiman" />
          <option name="id" value="caiman" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 9 Pro" />
          <option name="screenDensity" value="360" />
          <option name="screenX" value="960" />
          <option name="screenY" value="2142" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="google" />
          <option name="codename" value="comet" />
          <option name="default" value="true" />
          <option name="id" value="comet" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 9 Pro Fold" />
          <option name="screenDensity" value="390" />
          <option name="screenX" value="2076" />
          <option name="screenY" value="2152" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="35" />
          <option name="brand" value="google" />
          <option name="codename" value="comet" />
          <option name="default" value="true" />
          <option name="id" value="comet" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 9 Pro Fold" />
          <option name="screenDensity" value="390" />
          <option name="screenX" value="2076" />
          <option name="screenY" value="2152" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="29" />
          <option name="brand" value="samsung" />
          <option name="codename" value="crownqlteue" />
          <option name="id" value="crownqlteue" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy Note9" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="2220" />
          <option name="screenY" value="1080" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="dm2q" />
          <option name="id" value="dm2q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="S23 Plus" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2340" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="dm3q" />
          <option name="id" value="dm3q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy S23 Ultra" />
          <option name="screenDensity" value="600" />
          <option name="screenX" value="1440" />
          <option name="screenY" value="3088" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="motorola" />
          <option name="codename" value="dubai" />
          <option name="id" value="dubai" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="edge 30" />
          <option name="screenDensity" value="405" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="e1q" />
          <option name="default" value="true" />
          <option name="id" value="e1q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy S24" />
          <option name="screenDensity" value="480" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2340" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="e3q" />
          <option name="id" value="e3q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy S24 Ultra" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1440" />
          <option name="screenY" value="3120" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="google" />
          <option name="codename" value="eos" />
          <option name="id" value="eos" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Eos" />
          <option name="screenDensity" value="320" />
          <option name="screenX" value="384" />
          <option name="screenY" value="384" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="35" />
          <option name="brand" value="motorola" />
          <option name="codename" value="eqe" />
          <option name="id" value="eqe" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="edge 50 pro" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1220" />
          <option name="screenY" value="2712" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="google" />
          <option name="codename" value="felix" />
          <option name="id" value="felix" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel Fold" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="2208" />
          <option name="screenY" value="1840" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="google" />
          <option name="codename" value="felix" />
          <option name="id" value="felix" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel Fold" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="2208" />
          <option name="screenY" value="1840" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="google" />
          <option name="codename" value="felix_camera" />
          <option name="id" value="felix_camera" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel Fold (Camera-enabled)" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="2208" />
          <option name="screenY" value="1840" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="motorola" />
          <option name="codename" value="fogona" />
          <option name="id" value="fogona" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="moto g play - 2024" />
          <option name="screenDensity" value="280" />
          <option name="screenX" value="720" />
          <option name="screenY" value="1600" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="motorola" />
          <option name="codename" value="fogos" />
          <option name="id" value="fogos" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="moto g34 5G" />
          <option name="screenDensity" value="280" />
          <option name="screenX" value="720" />
          <option name="screenY" value="1600" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="g0q" />
          <option name="id" value="g0q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="SM-S906U1" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2340" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="gta9pwifi" />
          <option name="id" value="gta9pwifi" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="SM-X210" />
          <option name="screenDensity" value="240" />
          <option name="screenX" value="1200" />
          <option name="screenY" value="1920" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="samsung" />
          <option name="codename" value="gts7lwifi" />
          <option name="id" value="gts7lwifi" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="SM-T870" />
          <option name="screenDensity" value="340" />
          <option name="screenX" value="1600" />
          <option name="screenY" value="2560" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="gts7xllite" />
          <option name="id" value="gts7xllite" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="SM-T738U" />
          <option name="screenDensity" value="340" />
          <option name="screenX" value="1600" />
          <option name="screenY" value="2560" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="samsung" />
          <option name="codename" value="gts8uwifi" />
          <option name="formFactor" value="Tablet" />
          <option name="id" value="gts8uwifi" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy Tab S8 Ultra" />
          <option name="screenDensity" value="320" />
          <option name="screenX" value="1848" />
          <option name="screenY" value="2960" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="gts8wifi" />
          <option name="formFactor" value="Tablet" />
          <option name="id" value="gts8wifi" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy Tab S8" />
          <option name="screenDensity" value="274" />
          <option name="screenX" value="1600" />
          <option name="screenY" value="2560" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="gts9fe" />
          <option name="id" value="gts9fe" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy Tab S9 FE 5G" />
          <option name="screenDensity" value="280" />
          <option name="screenX" value="1440" />
          <option name="screenY" value="2304" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="gts9wifi" />
          <option name="id" value="gts9wifi" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="SM-X710" />
          <option name="screenDensity" value="340" />
          <option name="screenX" value="1600" />
          <option name="screenY" value="2560" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="google" />
          <option name="codename" value="husky" />
          <option name="id" value="husky" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 8 Pro" />
          <option name="screenDensity" value="390" />
          <option name="screenX" value="1008" />
          <option name="screenY" value="2244" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="30" />
          <option name="brand" value="motorola" />
          <option name="codename" value="java" />
          <option name="id" value="java" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="G20" />
          <option name="screenDensity" value="280" />
          <option name="screenX" value="720" />
          <option name="screenY" value="1600" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="google" />
          <option name="codename" value="komodo" />
          <option name="id" value="komodo" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 9 Pro XL" />
          <option name="screenDensity" value="360" />
          <option name="screenX" value="1008" />
          <option name="screenY" value="2244" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="35" />
          <option name="brand" value="google" />
          <option name="codename" value="komodo" />
          <option name="id" value="komodo" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 9 Pro XL" />
          <option name="screenDensity" value="360" />
          <option name="screenX" value="1008" />
          <option name="screenY" value="2244" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="motorola" />
          <option name="codename" value="lion" />
          <option name="id" value="lion" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="moto g04" />
          <option name="screenDensity" value="280" />
          <option name="screenX" value="720" />
          <option name="screenY" value="1612" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="google" />
          <option name="codename" value="lynx" />
          <option name="id" value="lynx" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 7a" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="motorola" />
          <option name="codename" value="lyriq" />
          <option name="id" value="lyriq" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="edge 40" />
          <option name="screenDensity" value="400" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="motorola" />
          <option name="codename" value="manaus" />
          <option name="id" value="manaus" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="edge 40 neo" />
          <option name="screenDensity" value="400" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="motorola" />
          <option name="codename" value="maui" />
          <option name="id" value="maui" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Motorola" />
          <option name="name" value="moto g play - 2023" />
          <option name="screenDensity" value="280" />
          <option name="screenX" value="720" />
          <option name="screenY" value="1600" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="o1q" />
          <option name="id" value="o1q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy S21" />
          <option name="screenDensity" value="421" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="31" />
          <option name="brand" value="google" />
          <option name="codename" value="oriole" />
          <option name="id" value="oriole" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 6" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="35" />
          <option name="brand" value="samsung" />
          <option name="codename" value="pa3q" />
          <option name="id" value="pa3q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy S25 Ultra" />
          <option name="screenDensity" value="600" />
          <option name="screenX" value="1440" />
          <option name="screenY" value="3120" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="google" />
          <option name="codename" value="panther" />
          <option name="id" value="panther" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 7" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="q5q" />
          <option name="id" value="q5q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy Z Fold5" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1812" />
          <option name="screenY" value="2176" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="q6q" />
          <option name="id" value="q6q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy Z Fold6" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1856" />
          <option name="screenY" value="2160" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="30" />
          <option name="brand" value="google" />
          <option name="codename" value="r11" />
          <option name="formFactor" value="Wear OS" />
          <option name="id" value="r11" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel Watch" />
          <option name="screenDensity" value="320" />
          <option name="screenX" value="384" />
          <option name="screenY" value="384" />
          <option name="type" value="WEAR_OS" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="r11q" />
          <option name="id" value="r11q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="SM-S711U" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2340" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="30" />
          <option name="brand" value="google" />
          <option name="codename" value="redfin" />
          <option name="id" value="redfin" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 5" />
          <option name="screenDensity" value="440" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2340" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="google" />
          <option name="codename" value="shiba" />
          <option name="id" value="shiba" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 8" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="t2q" />
          <option name="id" value="t2q" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="Galaxy S21 Plus" />
          <option name="screenDensity" value="394" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2400" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="33" />
          <option name="brand" value="google" />
          <option name="codename" value="tangorpro" />
          <option name="formFactor" value="Tablet" />
          <option name="id" value="tangorpro" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel Tablet" />
          <option name="screenDensity" value="320" />
          <option name="screenX" value="1600" />
          <option name="screenY" value="2560" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="35" />
          <option name="brand" value="google" />
          <option name="codename" value="tegu" />
          <option name="id" value="tegu" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 9a" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2424" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="google" />
          <option name="codename" value="tokay" />
          <option name="default" value="true" />
          <option name="id" value="tokay" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 9" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2424" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="35" />
          <option name="brand" value="google" />
          <option name="codename" value="tokay" />
          <option name="default" value="true" />
          <option name="id" value="tokay" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Google" />
          <option name="name" value="Pixel 9" />
          <option name="screenDensity" value="420" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2424" />
        </PersistentDeviceSelectionData>
        <PersistentDeviceSelectionData>
          <option name="api" value="34" />
          <option name="brand" value="samsung" />
          <option name="codename" value="xcover7" />
          <option name="id" value="xcover7" />
          <option name="labId" value="google" />
          <option name="manufacturer" value="Samsung" />
          <option name="name" value="SM-G556B" />
          <option name="screenDensity" value="450" />
          <option name="screenX" value="1080" />
          <option name="screenY" value="2408" />
        </PersistentDeviceSelectionData>
      </list>
    </option>
  </component>
</project>

--- app

// >>> build.gradle
plugins {
    id 'com.android.application'
}

android {
    namespace 'com.miabue.app'
    compileSdk 35

    defaultConfig {
        applicationId "com.miabue.app"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildToolsVersion '35.0.0'
    /* kotlinOptions {
         jvmTarget = '11'
     }*/
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'

    // Para notificaciones
    implementation 'androidx.work:work-runtime:2.9.0'

    // Para permisos
    implementation 'androidx.core:core:1.12.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

--- app\src\androidTest\java\com\miabue\app

// >>> ExampleInstrumentedTest.java
package com.miabue.app;

import android.content.Context;

import androidx.test.platform.app.InstrumentationRegistry;
import androidx.test.ext.junit.runners.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

/**
 * Instrumented test, which will execute on an Android device.
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {
    @Test
    public void useAppContext() {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
        assertEquals("com.app.app", appContext.getPackageName());
    }
}

--- app\src\main

// >>> AndroidManifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-feature android:name="android.hardware.telephony" android:required="true"/>
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <uses-permission android:name="android.permission.SEND_SMS" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM" />
    <uses-permission android:name="android.permission.USE_EXACT_ALARM" />

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.AppMiAbue"
        tools:targetApi="31">

        <activity
            android:name="com.miabue.app.MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity
            android:name="com.miabue.app.TreatmentActivity"
            android:exported="false" />

        <activity
            android:name="com.miabue.app.MedicationActivity"
            android:exported="false" />

        <receiver android:name="com.miabue.app.NotificationReceiver"
            android:exported="false" />

    </application>

</manifest>

--- app\src\main\java\com\miabue\app

// >>> MainActivity.java
package com.miabue.app;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Bundle;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.material.button.MaterialButton;
import com.miabue.app.adapters.MedicationAdapter;
import com.miabue.app.database.DatabaseHelper;
import com.miabue.app.models.Treatment;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;

public class MainActivity extends AppCompatActivity {
    private static final int PERMISSION_REQUEST_CODE = 1001;
    private static final String EMERGENCY_PHONE = "911"; // Número de emergencia

    private TextView tvWelcome, tvDailyInfo;
    private MaterialButton btnRegisterTreatment, btnMyMedications, btnEmergency;
    private RecyclerView rvUpcomingMedications;
    private DatabaseHelper databaseHelper;
    private MedicationAdapter medicationAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initViews();
        initDatabase();
        setupClickListeners();
        requestPermissions();
        updateDailyInfo();
        loadUpcomingMedications();
    }

    private void initViews() {
        tvWelcome = findViewById(R.id.tv_welcome);
        tvDailyInfo = findViewById(R.id.tv_daily_info);
        btnRegisterTreatment = findViewById(R.id.btn_register_treatment);
        btnMyMedications = findViewById(R.id.btn_my_medications);
        btnEmergency = findViewById(R.id.btn_emergency);
        rvUpcomingMedications = findViewById(R.id.rv_upcoming_medications);

        // Configurar RecyclerView
        rvUpcomingMedications.setLayoutManager(new LinearLayoutManager(this));
        medicationAdapter = new MedicationAdapter(this, treatment -> {
            // Acción cuando se toma el medicamento
            takeMedication(treatment);
        });
        rvUpcomingMedications.setAdapter(medicationAdapter);
    }

    private void initDatabase() {
        databaseHelper = new DatabaseHelper(this);
    }

    private void setupClickListeners() {
        btnRegisterTreatment.setOnClickListener(v -> {
            Intent intent = new Intent(this, TreatmentActivity.class);
            startActivity(intent);
        });

        btnMyMedications.setOnClickListener(v -> {
            Intent intent = new Intent(this, MedicationActivity.class);
            startActivity(intent);
        });

        btnEmergency.setOnClickListener(v -> {
            activateEmergency();
        });
    }

    private void requestPermissions() {
        String[] permissions = {
                Manifest.permission.CALL_PHONE,
                Manifest.permission.SEND_SMS,
                Manifest.permission.POST_NOTIFICATIONS
        };

        for (String permission : permissions) {
            if (ContextCompat.checkSelfPermission(this, permission) != PackageManager.PERMISSION_GRANTED) {
                ActivityCompat.requestPermissions(this, permissions, PERMISSION_REQUEST_CODE);
                break;
            }
        }
    }

    private void updateDailyInfo() {
        Calendar calendar = Calendar.getInstance();
        SimpleDateFormat dateFormat = new SimpleDateFormat("EEEE, dd 'de' MMMM", new Locale("es", "ES"));
        String currentDate = dateFormat.format(calendar.getTime());

        // Personalizar saludo según la hora
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        String greeting;
        if (hour < 12) {
            greeting = "¡Buenos días!";
        } else if (hour < 18) {
            greeting = "¡Buenas tardes!";
        } else {
            greeting = "¡Buenas noches!";
        }

        tvWelcome.setText(greeting + " ¿Cómo se encuentra hoy?");

        // Mostrar información del día
        List<Treatment> treatments = databaseHelper.getAllActiveTreatments();
        StringBuilder dailyInfo = new StringBuilder();
        dailyInfo.append("Hoy es ").append(currentDate).append("\n\n");

        if (treatments.isEmpty()) {
            dailyInfo.append("No tiene medicamentos registrados.\n");
            dailyInfo.append("Registre sus tratamientos para recibir recordatorios.");
        } else {
            dailyInfo.append("Tiene ").append(treatments.size()).append(" medicamento(s) registrado(s).\n");
            dailyInfo.append("Recuerde tomar sus medicamentos a tiempo.\n");
            dailyInfo.append("¡Que tenga un excelente día!");
        }

        tvDailyInfo.setText(dailyInfo.toString());
    }

    private void loadUpcomingMedications() {
        List<Treatment> treatments = databaseHelper.getAllActiveTreatments();
        medicationAdapter.updateTreatments(treatments);
    }

    private void takeMedication(Treatment treatment) {
        // Actualizar última toma
        databaseHelper.updateLastTaken(treatment.getId(), new Date());

        Toast.makeText(this, "Medicamento tomado: " + treatment.getName(), Toast.LENGTH_SHORT).show();

        // Recargar lista
        loadUpcomingMedications();
    }

    private void activateEmergency() {
        Toast.makeText(this, getString(R.string.emergency_activated), Toast.LENGTH_SHORT).show();

        // Verificar permisos de llamada
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE)
                == PackageManager.PERMISSION_GRANTED) {

            // Realizar llamada de emergencia
            Intent callIntent = new Intent(Intent.ACTION_CALL);
            callIntent.setData(Uri.parse("tel:" + EMERGENCY_PHONE));
            startActivity(callIntent);

        } else {
            // Si no hay permisos, mostrar dialer
            Intent dialIntent = new Intent(Intent.ACTION_DIAL);
            dialIntent.setData(Uri.parse("tel:" + EMERGENCY_PHONE));
            startActivity(dialIntent);
        }
    }

    @Override
    protected void onResume() {
        super.onResume();
        // Actualizar información cuando se regrese a la actividad
        updateDailyInfo();
        loadUpcomingMedications();
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (requestCode == PERMISSION_REQUEST_CODE) {
            boolean allPermissionsGranted = true;
            for (int result : grantResults) {
                if (result != PackageManager.PERMISSION_GRANTED) {
                    allPermissionsGranted = false;
                    break;
                }
            }

            if (!allPermissionsGranted) {
                Toast.makeText(this, "Algunos permisos son necesarios para el funcionamiento completo de la app",
                        Toast.LENGTH_LONG).show();
            }
        }
    }
}


// >>> MedicationActivity.java
package com.miabue.app;


import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.miabue.app.adapters.MedicationAdapter;
import com.miabue.app.database.DatabaseHelper;
import com.miabue.app.models.Treatment;

import java.util.Date;
import java.util.List;

public class MedicationActivity extends AppCompatActivity {

    private RecyclerView rvMedications;
    private LinearLayout layoutEmpty;
    private ImageView btnBack;
    private DatabaseHelper databaseHelper;
    private MedicationAdapter medicationAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_medication);

        initViews();
        initDatabase();
        setupClickListeners();
        loadMedications();
    }

    private void initViews() {
        rvMedications = findViewById(R.id.rv_medications);
        layoutEmpty = findViewById(R.id.layout_empty);
        btnBack = findViewById(R.id.btn_back);

        // Configurar RecyclerView
        rvMedications.setLayoutManager(new LinearLayoutManager(this));
        medicationAdapter = new MedicationAdapter(this, treatment -> {
            // Acción cuando se toma el medicamento
            takeMedication(treatment);
        });
        rvMedications.setAdapter(medicationAdapter);
    }

    private void initDatabase() {
        databaseHelper = new DatabaseHelper(this);
    }

    private void setupClickListeners() {
        btnBack.setOnClickListener(v -> finish());
    }

    private void loadMedications() {
        List<Treatment> treatments = databaseHelper.getAllActiveTreatments();

        if (treatments.isEmpty()) {
            rvMedications.setVisibility(View.GONE);
            layoutEmpty.setVisibility(View.VISIBLE);
        } else {
            rvMedications.setVisibility(View.VISIBLE);
            layoutEmpty.setVisibility(View.GONE);
            medicationAdapter.updateTreatments(treatments);
        }
    }

    private void takeMedication(Treatment treatment) {
        // Actualizar última toma en la base de datos
        databaseHelper.updateLastTaken(treatment.getId(), new Date());

        // Mostrar mensaje de confirmación
        String message = "Medicamento tomado: " + treatment.getName();
        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();

        // Recargar la lista para actualizar la información
        loadMedications();
    }

    @Override
    protected void onResume() {
        super.onResume();
        // Recargar medicamentos cuando se regrese a la actividad
        loadMedications();
    }
}

// >>> NotificationReceiver.java
package com.miabue.app;


import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Build;

import androidx.core.app.NotificationCompat;

public class NotificationReceiver extends BroadcastReceiver {
    private static final String CHANNEL_ID = "medication_reminders";
    private static final int NOTIFICATION_ID = 1;

    @Override
    public void onReceive(Context context, Intent intent) {
        String medicationName = intent.getStringExtra("medication_name");
        String dose = intent.getStringExtra("dose");

        createNotificationChannel(context);
        showNotification(context, medicationName, dose);
    }

    private void createNotificationChannel(Context context) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            CharSequence name = "Recordatorios de Medicamentos";
            String description = "Notificaciones para recordar tomar medicamentos";
            int importance = NotificationManager.IMPORTANCE_HIGH;
            NotificationChannel channel = new NotificationChannel(CHANNEL_ID, name, importance);
            channel.setDescription(description);

            NotificationManager notificationManager = context.getSystemService(NotificationManager.class);
            notificationManager.createNotificationChannel(channel);
        }
    }

    private void showNotification(Context context, String medicationName, String dose) {
        Intent intent = new Intent(context, MainActivity.class);
        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);

        String title = context.getString(R.string.medication_reminder_title);
        String text = String.format(context.getString(R.string.medication_reminder_text),
                medicationName + " (" + dose + ")");

        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_medication)
                .setContentTitle(title)
                .setContentText(text)
                .setPriority(NotificationCompat.PRIORITY_HIGH)
                .setAutoCancel(true)
                .setContentIntent(pendingIntent)
                .setDefaults(NotificationCompat.DEFAULT_ALL);

        NotificationManager notificationManager =
                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
        notificationManager.notify(NOTIFICATION_ID, builder.build());
    }
}

// >>> TreatmentActivity.java
package com.miabue.app;


import android.app.TimePickerDialog;
import android.os.Bundle;
import android.text.TextUtils;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.miabue.app.database.DatabaseHelper;
import com.miabue.app.models.Treatment;
import com.miabue.app.utils.NotificationHelper;

import java.util.Calendar;
import java.util.Locale;

public class TreatmentActivity extends AppCompatActivity {

    private TextInputEditText etMedicationName, etDose, etFrequency, etStartTime;
    private MaterialButton btnSaveTreatment;
    private ImageView btnBack;
    private DatabaseHelper databaseHelper;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_treatment);

        initViews();
        initDatabase();
        setupClickListeners();
    }

    private void initViews() {
        etMedicationName = findViewById(R.id.et_medication_name);
        etDose = findViewById(R.id.et_dose);
        etFrequency = findViewById(R.id.et_frequency);
        etStartTime = findViewById(R.id.et_start_time);
        btnSaveTreatment = findViewById(R.id.btn_save_treatment);
        btnBack = findViewById(R.id.btn_back);
    }

    private void initDatabase() {
        databaseHelper = new DatabaseHelper(this);
    }

    private void setupClickListeners() {
        btnBack.setOnClickListener(v -> finish());

        etStartTime.setOnClickListener(v -> showTimePickerDialog());

        btnSaveTreatment.setOnClickListener(v -> saveTreatment());
    }

    private void showTimePickerDialog() {
        Calendar calendar = Calendar.getInstance();
        int hour = calendar.get(Calendar.HOUR_OF_DAY);
        int minute = calendar.get(Calendar.MINUTE);

        TimePickerDialog timePickerDialog = new TimePickerDialog(
                this,
                (view, selectedHour, selectedMinute) -> {
                    String time = String.format(Locale.getDefault(), "%02d:%02d", selectedHour, selectedMinute);
                    etStartTime.setText(time);
                },
                hour,
                minute,
                true // Formato 24 horas
        );

        timePickerDialog.show();
    }

    private void saveTreatment() {
        String medicationName = etMedicationName.getText().toString().trim();
        String dose = etDose.getText().toString().trim();
        String frequencyStr = etFrequency.getText().toString().trim();
        String startTime = etStartTime.getText().toString().trim();

        // Validaciones
        if (TextUtils.isEmpty(medicationName)) {
            etMedicationName.setError(getString(R.string.enter_medication_name));
            etMedicationName.requestFocus();
            return;
        }

        if (TextUtils.isEmpty(dose)) {
            etDose.setError(getString(R.string.enter_dose));
            etDose.requestFocus();
            return;
        }

        if (TextUtils.isEmpty(frequencyStr)) {
            etFrequency.setError("Ingrese la frecuencia en horas");
            etFrequency.requestFocus();
            return;
        }

        if (TextUtils.isEmpty(startTime)) {
            etStartTime.setError("Seleccione la hora de inicio");
            etStartTime.requestFocus();
            return;
        }

        int frequency;
        try {
            frequency = Integer.parseInt(frequencyStr);
            if (frequency <= 0 || frequency > 24) {
                etFrequency.setError("La frecuencia debe ser entre 1 y 24 horas");
                etFrequency.requestFocus();
                return;
            }
        } catch (NumberFormatException e) {
            etFrequency.setError("Ingrese un número válido");
            etFrequency.requestFocus();
            return;
        }

        // Crear y guardar tratamiento
        Treatment treatment = new Treatment(medicationName, dose, frequency, startTime);
        long result = databaseHelper.insertTreatment(treatment);

        if (result != -1) {
            treatment.setId((int) result);

            // Programar notificaciones
            NotificationHelper.scheduleNotification(this, treatment);

            Toast.makeText(this, getString(R.string.treatment_saved_success), Toast.LENGTH_SHORT).show();
            finish();
        } else {
            Toast.makeText(this, getString(R.string.error_saving_treatment), Toast.LENGTH_SHORT).show();
        }
    }

    private void clearForm() {
        etMedicationName.setText("");
        etDose.setText("");
        etFrequency.setText("");
        etStartTime.setText("");
        etMedicationName.requestFocus();
    }
}


--- app\src\main\java\com\miabue\app\adapters

// >>> MedicationAdapter.java
package com.miabue.app.adapters;


import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.material.button.MaterialButton;
import com.miabue.app.R;
import com.miabue.app.models.Treatment;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;

public class MedicationAdapter extends RecyclerView.Adapter<MedicationAdapter.MedicationViewHolder> {

    private Context context;
    private List<Treatment> treatments;
    private OnMedicationTakenListener listener;
    private SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm", Locale.getDefault());

    public interface OnMedicationTakenListener {
        void onMedicationTaken(Treatment treatment);
    }

    public MedicationAdapter(Context context, OnMedicationTakenListener listener) {
        this.context = context;
        this.treatments = new ArrayList<>();
        this.listener = listener;
    }

    @NonNull
    @Override
    public MedicationViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.item_medication, parent, false);
        return new MedicationViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull MedicationViewHolder holder, int position) {
        Treatment treatment = treatments.get(position);

        holder.tvMedicationName.setText(treatment.getName());
        holder.tvMedicationDose.setText("Dosis: " + treatment.getDose());

        // Calcular próxima dosis
        String nextDoseTime = calculateNextDose(treatment);
        holder.tvNextDose.setText("Próxima dosis: " + nextDoseTime);

        holder.btnTakeMedication.setOnClickListener(v -> {
            if (listener != null) {
                listener.onMedicationTaken(treatment);
            }
        });
    }

    @Override
    public int getItemCount() {
        return treatments.size();
    }

    public void updateTreatments(List<Treatment> newTreatments) {
        this.treatments.clear();
        this.treatments.addAll(newTreatments);
        notifyDataSetChanged();
    }

    private String calculateNextDose(Treatment treatment) {
        try {
            Date startTime = timeFormat.parse(treatment.getStartTime());
            Calendar calendar = Calendar.getInstance();
            Calendar startCalendar = Calendar.getInstance();
            startCalendar.setTime(startTime);

            // Establecer la hora de inicio para hoy
            calendar.set(Calendar.HOUR_OF_DAY, startCalendar.get(Calendar.HOUR_OF_DAY));
            calendar.set(Calendar.MINUTE, startCalendar.get(Calendar.MINUTE));
            calendar.set(Calendar.SECOND, 0);
            calendar.set(Calendar.MILLISECOND, 0);

            Date now = new Date();
            Date lastTaken = treatment.getLastTaken();

            // Si nunca se ha tomado, la próxima dosis es a la hora programada
            if (lastTaken == null) {
                if (calendar.getTime().before(now)) {
                    // Si la hora ya pasó hoy, programar para mañana
                    calendar.add(Calendar.DAY_OF_MONTH, 1);
                }
                return timeFormat.format(calendar.getTime());
            }

            // Calcular próxima dosis basada en la última toma
            Calendar lastTakenCalendar = Calendar.getInstance();
            lastTakenCalendar.setTime(lastTaken);
            lastTakenCalendar.add(Calendar.HOUR_OF_DAY, treatment.getFrequencyHours());

            return timeFormat.format(lastTakenCalendar.getTime());

        } catch (ParseException e) {
            return "Error al calcular";
        }
    }

    static class MedicationViewHolder extends RecyclerView.ViewHolder {
        TextView tvMedicationName, tvMedicationDose, tvNextDose;
        MaterialButton btnTakeMedication;

        public MedicationViewHolder(@NonNull View itemView) {
            super(itemView);
            tvMedicationName = itemView.findViewById(R.id.tv_medication_name);
            tvMedicationDose = itemView.findViewById(R.id.tv_medication_dose);
            tvNextDose = itemView.findViewById(R.id.tv_next_dose);
            btnTakeMedication = itemView.findViewById(R.id.btn_take_medication);
        }
    }
}

--- app\src\main\java\com\miabue\app\database

// >>> DatabaseHelper.java
package com.miabue.app.database;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import com.miabue.app.models.Treatment;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;

public class DatabaseHelper extends SQLiteOpenHelper {
    private static final String DATABASE_NAME = "app.db";
    private static final int DATABASE_VERSION = 1;

    // Tabla de tratamientos
    private static final String TABLE_TREATMENTS = "treatments";
    private static final String COLUMN_ID = "id";
    private static final String COLUMN_NAME = "name";
    private static final String COLUMN_DOSE = "dose";
    private static final String COLUMN_FREQUENCY = "frequency_hours";
    private static final String COLUMN_START_TIME = "start_time";
    private static final String COLUMN_CREATED_DATE = "created_date";
    private static final String COLUMN_IS_ACTIVE = "is_active";
    private static final String COLUMN_LAST_TAKEN = "last_taken";

    private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault());

    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        String createTable = "CREATE TABLE " + TABLE_TREATMENTS + " (" +
                COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                COLUMN_NAME + " TEXT NOT NULL, " +
                COLUMN_DOSE + " TEXT NOT NULL, " +
                COLUMN_FREQUENCY + " INTEGER NOT NULL, " +
                COLUMN_START_TIME + " TEXT NOT NULL, " +
                COLUMN_CREATED_DATE + " TEXT NOT NULL, " +
                COLUMN_IS_ACTIVE + " INTEGER DEFAULT 1, " +
                COLUMN_LAST_TAKEN + " TEXT" +
                ");";
        db.execSQL(createTable);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_TREATMENTS);
        onCreate(db);
    }

    // Insertar tratamiento
    public long insertTreatment(Treatment treatment) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();

        values.put(COLUMN_NAME, treatment.getName());
        values.put(COLUMN_DOSE, treatment.getDose());
        values.put(COLUMN_FREQUENCY, treatment.getFrequencyHours());
        values.put(COLUMN_START_TIME, treatment.getStartTime());
        values.put(COLUMN_CREATED_DATE, dateFormat.format(treatment.getCreatedDate()));
        values.put(COLUMN_IS_ACTIVE, treatment.isActive() ? 1 : 0);

        long id = db.insert(TABLE_TREATMENTS, null, values);
        db.close();
        return id;
    }

    // Obtener todos los tratamientos activos
    public List<Treatment> getAllActiveTreatments() {
        List<Treatment> treatments = new ArrayList<>();
        SQLiteDatabase db = this.getReadableDatabase();

        String query = "SELECT * FROM " + TABLE_TREATMENTS + " WHERE " + COLUMN_IS_ACTIVE + " = 1";
        Cursor cursor = db.rawQuery(query, null);

        if (cursor.moveToFirst()) {
            do {
                Treatment treatment = cursorToTreatment(cursor);
                treatments.add(treatment);
            } while (cursor.moveToNext());
        }

        cursor.close();
        db.close();
        return treatments;
    }

    // Actualizar última toma de medicamento
    public void updateLastTaken(int treatmentId, Date lastTaken) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put(COLUMN_LAST_TAKEN, dateFormat.format(lastTaken));

        db.update(TABLE_TREATMENTS, values, COLUMN_ID + " = ?", new String[]{String.valueOf(treatmentId)});
        db.close();
    }

    // Convertir cursor a Treatment
    private Treatment cursorToTreatment(Cursor cursor) {
        Treatment treatment = new Treatment();
        treatment.setId(cursor.getInt(cursor.getColumnIndexOrThrow(COLUMN_ID)));
        treatment.setName(cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_NAME)));
        treatment.setDose(cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_DOSE)));
        treatment.setFrequencyHours(cursor.getInt(cursor.getColumnIndexOrThrow(COLUMN_FREQUENCY)));
        treatment.setStartTime(cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_START_TIME)));
        treatment.setActive(cursor.getInt(cursor.getColumnIndexOrThrow(COLUMN_IS_ACTIVE)) == 1);

        try {
            String createdDateStr = cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_CREATED_DATE));
            treatment.setCreatedDate(dateFormat.parse(createdDateStr));

            String lastTakenStr = cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_LAST_TAKEN));
            if (lastTakenStr != null) {
                treatment.setLastTaken(dateFormat.parse(lastTakenStr));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return treatment;
    }
}

--- app\src\main\java\com\miabue\app\models

// >>> Treatment.java
package com.miabue.app.models;

import java.io.Serializable;
import java.util.Date;

public class Treatment implements Serializable {
    private int id;
    private String name;
    private String dose;
    private int frequencyHours;
    private String startTime;
    private Date createdDate;
    private boolean isActive;
    private Date lastTaken;

    public Treatment() {
        this.createdDate = new Date();
        this.isActive = true;
    }

    public Treatment(String name, String dose, int frequencyHours, String startTime) {
        this();
        this.name = name;
        this.dose = dose;
        this.frequencyHours = frequencyHours;
        this.startTime = startTime;
    }

    // Getters y Setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDose() {
        return dose;
    }

    public void setDose(String dose) {
        this.dose = dose;
    }

    public int getFrequencyHours() {
        return frequencyHours;
    }

    public void setFrequencyHours(int frequencyHours) {
        this.frequencyHours = frequencyHours;
    }

    public String getStartTime() {
        return startTime;
    }

    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }

    public Date getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    public boolean isActive() {
        return isActive;
    }

    public void setActive(boolean active) {
        isActive = active;
    }

    public Date getLastTaken() {
        return lastTaken;
    }

    public void setLastTaken(Date lastTaken) {
        this.lastTaken = lastTaken;
    }

    @Override
    public String toString() {
        return name + " - " + dose + " (cada " + frequencyHours + "h)";
    }
}

--- app\src\main\java\com\miabue\app\utils

// >>> NotificationHelper.java
package com.miabue.app.utils;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.util.Log;

import com.miabue.app.models.Treatment;
import com.miabue.app.NotificationReceiver;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;

public class NotificationHelper {
    private static final String TAG = "NotificationHelper";

    public static void scheduleNotification(Context context, Treatment treatment) {
        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);

        Intent intent = new Intent(context, NotificationReceiver.class);
        intent.putExtra("medication_name", treatment.getName());
        intent.putExtra("dose", treatment.getDose());

        PendingIntent pendingIntent = PendingIntent.getBroadcast(
                context,
                treatment.getId(),
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE
        );

        // Calcular próxima notificación
        Calendar calendar = getNextNotificationTime(treatment);

        if (calendar != null) {
            try {
                alarmManager.setRepeating(
                        AlarmManager.RTC_WAKEUP,
                        calendar.getTimeInMillis(),
                        treatment.getFrequencyHours() * 60 * 60 * 1000L, // Convertir horas a milisegundos
                        pendingIntent
                );
                Log.d(TAG, "Notificación programada para: " + calendar.getTime().toString());
            } catch (Exception e) {
                Log.e(TAG, "Error al programar notificación", e);
            }
        }
    }

    private static Calendar getNextNotificationTime(Treatment treatment) {
        try {
            SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm", Locale.getDefault());
            Date startTime = timeFormat.parse(treatment.getStartTime());

            Calendar calendar = Calendar.getInstance();
            Calendar startCalendar = Calendar.getInstance();
            startCalendar.setTime(startTime);

            // Establecer la hora y minuto del tratamiento
            calendar.set(Calendar.HOUR_OF_DAY, startCalendar.get(Calendar.HOUR_OF_DAY));
            calendar.set(Calendar.MINUTE, startCalendar.get(Calendar.MINUTE));
            calendar.set(Calendar.SECOND, 0);

            // Si la hora ya pasó hoy, programar para mañana
            if (calendar.getTimeInMillis() <= System.currentTimeMillis()) {
                calendar.add(Calendar.DAY_OF_MONTH, 1);
            }

            return calendar;
        } catch (ParseException e) {
            Log.e(TAG, "Error al parsear la hora del tratamiento", e);
            return null;
        }
    }

    public static void cancelNotification(Context context, int treatmentId) {
        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
        Intent intent = new Intent(context, NotificationReceiver.class);
        PendingIntent pendingIntent = PendingIntent.getBroadcast(
                context,
                treatmentId,
                intent,
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE
        );

        alarmManager.cancel(pendingIntent);
    }
}


--- app\src\main\res\drawable

// >>> circle_background.xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="oval">
    <solid android:color="@color/primary_light" />
</shape>

// >>> ic_back.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="@color/text_primary"
        android:pathData="M20,11H7.83l5.59,-5.59L12,4l-8,8l8,8l1.41,-1.41L7.83,13H20V11z"/>
</vector>

// >>> ic_emergency.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M20,8l-8,-4.5L4,8v8l8,4.5L20,16V8zM14,17.5l-2,-1.12L10,17.5v-2.5h-2v-2h2v-2.5l2,1.12L14,10.5v2.5h2v2h-2V17.5z"/>
</vector>

// >>> ic_empty_medications.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="120dp"
    android:height="120dp"
    android:viewportWidth="120"
    android:viewportHeight="120">

    <!-- Botella de medicamentos -->
    <path
        android:fillColor="@color/text_secondary"
        android:pathData="M40,30h40v60c0,5 -5,10 -10,10H50c-5,0 -10,-5 -10,-10V30z"
        android:fillAlpha="0.3"/>

    <!-- Tapa -->
    <path
        android:fillColor="@color/text_secondary"
        android:pathData="M35,20h50c3,0 5,2 5,5v5H30v-5C30,22 32,20 35,20z"
        android:fillAlpha="0.3"/>

    <!-- Cruz médica -->
    <path
        android:fillColor="@color/primary_orange"
        android:pathData="M55,50h10v20H55V50z"
        android:fillAlpha="0.5"/>
    <path
        android:fillColor="@color/primary_orange"
        android:pathData="M50,55h20v10H50V55z"
        android:fillAlpha="0.5"/>

</vector>

// >>> ic_launcher_background.xml
<?xml version="1.0" encoding="utf-8"?>
<vector
    android:height="108dp"
    android:width="108dp"
    android:viewportHeight="108"
    android:viewportWidth="108"
    xmlns:android="http://schemas.android.com/apk/res/android">
    <path android:fillColor="#3DDC84"
          android:pathData="M0,0h108v108h-108z"/>
    <path android:fillColor="#00000000" android:pathData="M9,0L9,108"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M19,0L19,108"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M29,0L29,108"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M39,0L39,108"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M49,0L49,108"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M59,0L59,108"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M69,0L69,108"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M79,0L79,108"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M89,0L89,108"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M99,0L99,108"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M0,9L108,9"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M0,19L108,19"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M0,29L108,29"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M0,39L108,39"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M0,49L108,49"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M0,59L108,59"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M0,69L108,69"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M0,79L108,79"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M0,89L108,89"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M0,99L108,99"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M19,29L89,29"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M19,39L89,39"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M19,49L89,49"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M19,59L89,59"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M19,69L89,69"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M19,79L89,79"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M29,19L29,89"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M39,19L39,89"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M49,19L49,89"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M59,19L59,89"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M69,19L69,89"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
    <path android:fillColor="#00000000" android:pathData="M79,19L79,89"
          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
</vector>


// >>> ic_launcher_foreground.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:aapt="http://schemas.android.com/aapt"
    android:width="108dp"
    android:height="108dp"
    android:viewportWidth="108"
    android:viewportHeight="108">
    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
        <aapt:attr name="android:fillColor">
            <gradient
                android:endX="85.84757"
                android:endY="92.4963"
                android:startX="42.9492"
                android:startY="49.59793"
                android:type="linear">
                <item
                    android:color="#44000000"
                    android:offset="0.0" />
                <item
                    android:color="#00000000"
                    android:offset="1.0" />
            </gradient>
        </aapt:attr>
    </path>
    <path
        android:fillColor="#FFFFFF"
        android:fillType="nonZero"
        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
        android:strokeWidth="1"
        android:strokeColor="#00000000" />
</vector>

// >>> ic_medical_bag.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M20,8h-3V6c0,-1.1 -0.9,-2 -2,-2H9C7.9,4 7,4.9 7,6v2H4c-1.1,0 -2,0.9 -2,2v10c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2V10C22,8.9 21.1,8 20,8zM9,6h6v2H9V6zM20,20H4V10h3v2h2v-2h6v2h2v-2h3V20z"/>
</vector>

// >>> ic_medication.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M10.5,13.5l7.5,-7.5c0.39,-0.39 0.39,-1.02 0,-1.41l-1.5,-1.5c-0.39,-0.39 -1.02,-0.39 -1.41,0l-7.5,7.5c-0.39,0.39 -0.39,1.02 0,1.41l1.5,1.5c0.39,0.39 1.02,0.39 1.41,0z"/>
    <path
        android:fillColor="@android:color/white"
        android:pathData="M15.5,9.5c0,1.38 -1.12,2.5 -2.5,2.5s-2.5,-1.12 -2.5,-2.5s1.12,-2.5 2.5,-2.5s2.5,1.12 2.5,2.5z"/>
    <path
        android:fillColor="@android:color/white"
        android:pathData="M6,15c-1.1,0 -2,0.9 -2,2s0.9,2 2,2s2,-0.9 2,-2s-0.9,-2 -2,-2z"/>
    <path
        android:fillColor="@android:color/white"
        android:pathData="M18,15c-1.1,0 -2,0.9 -2,2s0.9,2 2,2s2,-0.9 2,-2s-0.9,-2 -2,-2z"/>
</vector>

// >>> ic_miabue_logo.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="60dp"
    android:height="60dp"
    android:viewportWidth="60"
    android:viewportHeight="60">

    <path
        android:fillColor="@color/primary_orange"
        android:pathData="M30,30m-28,0a28,28 0,1 1,56 0a28,28 0,1 1,-56 0"/>

    <path
        android:fillColor="@color/white"
        android:pathData="M30,45c-8.28,0 -15,-6.72 -15,-15s6.72,-15 15,-15s15,6.72 15,15S38.28,45 30,45z"/>

    <path
        android:fillColor="@color/text_primary"
        android:pathData="M26,26m-2,0a2,2 0,1 1,4 0a2,2 0,1 1,-4 0"/>
    <path
        android:fillColor="@color/text_primary"
        android:pathData="M34,26m-2,0a2,2 0,1 1,4 0a2,2 0,1 1,-4 0"/>

    <path
        android:fillColor="@android:color/transparent"
        android:strokeColor="@color/text_primary"
        android:strokeWidth="2"
        android:strokeLineCap="round"
        android:pathData="M24,32c2,3 4,4 6,4s4,-1 6,-4"/>

    <path
        android:fillColor="@color/text_secondary"
        android:pathData="M20,20c0,-2 2,-4 4,-4s4,2 4,4c0,0 2,-2 4,-2s4,2 4,2c0,-2 2,-4 4,-4s4,2 4,4"/>

    <path
        android:fillColor="@color/accent_coral"
        android:pathData="M10,50c-2,-8 5,-15 10,-12c3,2 7,1 10,3c3,2 7,1 10,3c5,3 12,-4 10,12c-1,8 -8,6 -20,6S11,58 10,50z"
        android:fillAlpha="0.8"/>

</vector>

// >>> ic_save.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M17,3H5C3.89,3 3,3.9 3,5v14c0,1.1 0.89,2 2,2h14c1.1,0 2,-0.9 2,-2V7L17,3zM12,19c-1.66,0 -3,-1.34 -3,-3s1.34,-3 3,-3s3,1.34 3,3S13.66,19 12,19zM15,9H5V5h10V9z"/>
</vector>

--- app\src\main\res\layout

// >>> activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/background_light"
    android:fillViewport="true">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:paddingStart="20dp"
        android:paddingEnd="20dp"
        android:paddingTop="20dp"
        android:paddingBottom="80dp"> <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center_vertical"
        android:layout_marginBottom="30dp">

        <ImageView
            android:layout_width="60dp"
            android:layout_height="60dp"
            android:layout_marginEnd="15dp"
            android:src="@mipmap/ic_launcher_round" />

        <LinearLayout
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/app_name"
                android:textSize="28sp"
                android:textStyle="bold"
                android:textColor="@color/primary_orange" />

            <TextView
                android:id="@+id/tv_welcome"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/welcome_message"
                android:textSize="18sp"
                android:textColor="@color/text_secondary" />

        </LinearLayout>

    </LinearLayout>

        <androidx.cardview.widget.CardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="25dp"
            app:cardCornerRadius="15dp"
            app:cardElevation="8dp"
            app:cardBackgroundColor="@color/card_background">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="20dp">

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="@string/daily_routine"
                    android:textSize="20sp"
                    android:textStyle="bold"
                    android:textColor="@color/text_primary"
                    android:layout_marginBottom="15dp" />

                <TextView
                    android:id="@+id/tv_daily_info"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Cargando rutina diaria..."
                    android:textSize="16sp"
                    android:textColor="@color/text_secondary"
                    android:lineSpacingExtra="4dp" />

            </LinearLayout>

        </androidx.cardview.widget.CardView>

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:layout_marginBottom="20dp">

            <com.google.android.material.button.MaterialButton
                android:id="@+id/btn_register_treatment"
                android:layout_width="match_parent"
                android:layout_height="70dp"
                android:text="@string/register_treatment"
                android:textSize="18sp"
                android:textStyle="bold"
                android:backgroundTint="@color/primary_orange"
                android:textColor="@color/white"
                app:cornerRadius="15dp"
                app:icon="@drawable/ic_medical_bag"
                app:iconGravity="textStart"
                app:iconPadding="10dp"
                app:iconSize="28dp"
                android:layout_marginBottom="15dp" />

            <com.google.android.material.button.MaterialButton
                android:id="@+id/btn_my_medications"
                android:layout_width="match_parent"
                android:layout_height="70dp"
                android:layout_marginBottom="15dp"
                android:backgroundTint="@color/info_blue"
                android:text="@string/my_medications"
                android:textColor="@color/white"
                android:textSize="18sp"
                android:textStyle="bold"
                app:cornerRadius="15dp"
                app:icon="@drawable/ic_medication"
                app:iconGravity="textStart"
                app:iconPadding="10dp"
                app:iconSize="28dp" />

        </LinearLayout>

        <androidx.cardview.widget.CardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="20dp"
            app:cardCornerRadius="20dp"
            app:cardElevation="12dp"
            app:cardBackgroundColor="@color/emergency_red">

            <com.google.android.material.button.MaterialButton
                android:id="@+id/btn_emergency"
                android:layout_width="match_parent"
                android:layout_height="100dp"
                android:text="@string/emergency_button"
                android:textSize="24sp"
                android:textStyle="bold"
                android:textColor="@color/white"
                android:backgroundTint="@color/emergency_red"
                app:cornerRadius="20dp"
                app:icon="@drawable/ic_emergency"
                app:iconGravity="top"
                app:iconPadding="8dp"
                app:iconSize="36dp"
                android:elevation="0dp" />

        </androidx.cardview.widget.CardView>

        <androidx.cardview.widget.CardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:cardCornerRadius="15dp"
            app:cardElevation="8dp"
            app:cardBackgroundColor="@color/card_background">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="20dp">

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginBottom="15dp"
                    android:text="Próximos medicamentos"
                    android:textColor="@color/text_primary"
                    android:textSize="20sp"
                    android:textStyle="bold" />

                <androidx.recyclerview.widget.RecyclerView
                    android:id="@+id/rv_upcoming_medications"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:nestedScrollingEnabled="false" />

            </LinearLayout>

        </androidx.cardview.widget.CardView>

    </LinearLayout>

</ScrollView>

// >>> activity_medication.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/background_light"
    android:orientation="vertical">

    <!-- Header -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center_vertical"
        android:padding="20dp"
        android:background="@color/card_background"
        android:elevation="4dp">

        <ImageView
            android:id="@+id/btn_back"
            android:layout_width="40dp"
            android:layout_height="40dp"
            android:src="@drawable/ic_back"
            android:background="?attr/selectableItemBackgroundBorderless"
            android:padding="8dp"
            android:layout_marginEnd="15dp" />

        <TextView
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="@string/my_medications"
            android:textSize="24sp"
            android:textStyle="bold"
            android:textColor="@color/text_primary" />

    </LinearLayout>

    <!-- Lista de medicamentos -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/rv_medications"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:padding="20dp"
        android:clipToPadding="false" />

    <!-- Mensaje cuando no hay medicamentos -->
    <LinearLayout
        android:id="@+id/layout_empty"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:orientation="vertical"
        android:gravity="center"
        android:padding="40dp"
        android:visibility="gone">

        <ImageView
            android:layout_width="120dp"
            android:layout_height="120dp"
            android:src="@drawable/ic_empty_medications"
            android:layout_marginBottom="20dp"
            android:alpha="0.5" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="No hay medicamentos registrados"
            android:textSize="18sp"
            android:textColor="@color/text_secondary"
            android:textAlignment="center"
            android:layout_marginBottom="10dp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Registre un tratamiento para comenzar"
            android:textSize="14sp"
            android:textColor="@color/text_secondary"
            android:textAlignment="center" />

    </LinearLayout>

</LinearLayout>

// >>> activity_treatment.xml
<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/background_light"
    android:fillViewport="true">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:padding="20dp">

        <!-- Header -->
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            android:gravity="center_vertical"
            android:layout_marginBottom="30dp">

            <ImageView
                android:id="@+id/btn_back"
                android:layout_width="40dp"
                android:layout_height="40dp"
                android:src="@drawable/ic_back"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:padding="8dp"
                android:layout_marginEnd="15dp" />

            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="@string/register_treatment"
                android:textSize="24sp"
                android:textStyle="bold"
                android:textColor="@color/text_primary" />

        </LinearLayout>

        <!-- Formulario -->
        <androidx.cardview.widget.CardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:cardCornerRadius="15dp"
            app:cardElevation="8dp"
            app:cardBackgroundColor="@color/card_background">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="25dp">

                <!-- Nombre del medicamento -->
                <com.google.android.material.textfield.TextInputLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginBottom="20dp"
                    app:boxStrokeColor="@color/primary_orange"
                    app:hintTextColor="@color/primary_orange">

                    <com.google.android.material.textfield.TextInputEditText
                        android:id="@+id/et_medication_name"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:hint="@string/treatment_name"
                        android:textSize="18sp"
                        android:inputType="textCapWords" />

                </com.google.android.material.textfield.TextInputLayout>

                <!-- Dosis -->
                <com.google.android.material.textfield.TextInputLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginBottom="20dp"
                    app:boxStrokeColor="@color/primary_orange"
                    app:hintTextColor="@color/primary_orange">

                    <com.google.android.material.textfield.TextInputEditText
                        android:id="@+id/et_dose"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:hint="@string/treatment_dose"
                        android:textSize="18sp"
                        android:inputType="text" />

                </com.google.android.material.textfield.TextInputLayout>

                <!-- Frecuencia -->
                <com.google.android.material.textfield.TextInputLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginBottom="20dp"
                    app:boxStrokeColor="@color/primary_orange"
                    app:hintTextColor="@color/primary_orange">

                    <com.google.android.material.textfield.TextInputEditText
                        android:id="@+id/et_frequency"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:hint="@string/treatment_frequency"
                        android:textSize="18sp"
                        android:inputType="number" />

                </com.google.android.material.textfield.TextInputLayout>

                <!-- Hora de inicio -->
                <com.google.android.material.textfield.TextInputLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginBottom="30dp"
                    app:boxStrokeColor="@color/primary_orange"
                    app:hintTextColor="@color/primary_orange">

                    <com.google.android.material.textfield.TextInputEditText
                        android:id="@+id/et_start_time"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:hint="@string/treatment_start_time"
                        android:textSize="18sp"
                        android:inputType="none"
                        android:focusable="false"
                        android:clickable="true" />

                </com.google.android.material.textfield.TextInputLayout>

                <!-- Botón guardar -->
                <com.google.android.material.button.MaterialButton
                    android:id="@+id/btn_save_treatment"
                    android:layout_width="match_parent"
                    android:layout_height="60dp"
                    android:text="@string/save_treatment"
                    android:textSize="18sp"
                    android:textStyle="bold"
                    android:backgroundTint="@color/success_green"
                    android:textColor="@color/white"
                    app:cornerRadius="15dp"
                    app:icon="@drawable/ic_save"
                    app:iconGravity="textStart"
                    app:iconPadding="10dp"
                    app:iconSize="24dp" />

            </LinearLayout>

        </androidx.cardview.widget.CardView>

    </LinearLayout>

</ScrollView>

// >>> item_medication.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_marginBottom="15dp"
    app:cardCornerRadius="15dp"
    app:cardElevation="6dp"
    app:cardBackgroundColor="@color/card_background">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:padding="20dp"
        android:gravity="center_vertical">

        <!-- Icono del medicamento -->
        <ImageView
            android:layout_width="50dp"
            android:layout_height="50dp"
            android:src="@drawable/ic_medication"
            android:background="@drawable/circle_background"
            android:backgroundTint="@color/primary_light"
            android:padding="12dp"
            android:layout_marginEnd="15dp" />

        <!-- Información del medicamento -->
        <LinearLayout
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical">

            <TextView
                android:id="@+id/tv_medication_name"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Nombre del medicamento"
                android:textSize="18sp"
                android:textStyle="bold"
                android:textColor="@color/text_primary"
                android:layout_marginBottom="4dp" />

            <TextView
                android:id="@+id/tv_medication_dose"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Dosis"
                android:textSize="14sp"
                android:textColor="@color/text_secondary"
                android:layout_marginBottom="4dp" />

            <TextView
                android:id="@+id/tv_next_dose"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/next_dose"
                android:textSize="12sp"
                android:textColor="@color/primary_orange"
                android:textStyle="bold" />

        </LinearLayout>

        <!-- Botón tomar medicamento -->
        <com.google.android.material.button.MaterialButton
            android:id="@+id/btn_take_medication"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Tomar"
            android:textSize="14sp"
            android:backgroundTint="@color/success_green"
            android:textColor="@color/white"
            app:cornerRadius="20dp"
            android:minWidth="80dp"
            android:minHeight="40dp" />

    </LinearLayout>

</androidx.cardview.widget.CardView>

--- app\src\main\res\mipmap-anydpi-v26

// >>> ic_launcher.xml
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@drawable/ic_launcher_background"/>
    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
</adaptive-icon>

// >>> ic_launcher_round.xml
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@drawable/ic_launcher_background"/>
    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
</adaptive-icon>

--- app\src\main\res\values

// >>> colors.xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="black">#FF000000</color>
    <color name="white">#FFFFFFFF</color>

    <color name="primary_orange">#FF8A65</color>
    <color name="primary_light">#FFCC9C</color>
    <color name="primary_dark">#D84315</color>
    <color name="accent_coral">#FF7043</color>

    <color name="emergency_red">#F44336</color>
    <color name="success_green">#4CAF50</color>
    <color name="warning_yellow">#FFC107</color>
    <color name="info_blue">#2196F3</color>

    <color name="background_light">#FFF8F5</color>
    <color name="card_background">#FFFFFF</color>
    <color name="text_primary">#333333</color>
    <color name="text_secondary">#666666</color>

    <color name="purple_200">#FFBB86FC</color>
    <color name="purple_500">#FF7043</color>
    <color name="purple_700">#FF7043</color>
    <color name="teal_200">#FF03DAC5</color>
    <color name="teal_700">#FF018786</color>
</resources>

// >>> strings.xml
<resources>
    <string name="app_name">MiAbue</string>

    <!-- Pantalla principal -->
    <string name="welcome_message">¡Hola! ¿Cómo está hoy?</string>
    <string name="daily_routine">Su rutina de hoy</string>

    <!-- Botones principales -->
    <string name="register_treatment">Registrar Tratamiento</string>
    <string name="my_medications">Mis Medicamentos</string>
    <string name="emergency_button">EMERGENCIA</string>

    <!-- Tratamientos -->
    <string name="treatment_name">Nombre del medicamento</string>
    <string name="treatment_dose">Dosis</string>
    <string name="treatment_frequency">Frecuencia (horas)</string>
    <string name="treatment_start_time">Hora de inicio</string>
    <string name="save_treatment">Guardar Tratamiento</string>

    <!-- Medicamentos -->
    <string name="take_medication">Tomar Medicamento</string>
    <string name="medication_taken">Medicamento tomado</string>
    <string name="next_dose">Próxima dosis:</string>

    <!-- Emergencia -->
    <string name="emergency_activated">Emergencia activada</string>
    <string name="calling_emergency">Llamando contacto de emergencia...</string>
    <string name="emergency_contact">Contacto de emergencia</string>

    <!-- Notificaciones -->
    <string name="medication_reminder_title">Recordatorio de medicamento</string>
    <string name="medication_reminder_text">Es hora de tomar su medicamento: %s</string>

    <!-- Mensajes -->
    <string name="enter_medication_name">Ingrese el nombre del medicamento</string>
    <string name="enter_dose">Ingrese la dosis</string>
    <string name="treatment_saved_success">Tratamiento guardado correctamente</string>
    <string name="error_saving_treatment">Error al guardar el tratamiento</string>
</resources>

// >>> themes.xml
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.AppMiAbue" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/purple_500</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>
</resources>

--- app\src\main\res\values-night

// >>> themes.xml
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.AppMiAbue" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/purple_200</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/black</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_200</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>
</resources>

--- app\src\main\res\xml

// >>> backup_rules.xml
<?xml version="1.0" encoding="utf-8"?><!--
   Sample backup rules file; uncomment and customize as necessary.
   See https://developer.android.com/guide/topics/data/autobackup
   for details.
   Note: This file is ignored for devices older than API 31
   See https://developer.android.com/about/versions/12/backup-restore
-->
<full-backup-content>
    <!--
   <include domain="sharedpref" path="."/>
   <exclude domain="sharedpref" path="device.xml"/>
-->
</full-backup-content>

// >>> data_extraction_rules.xml
<?xml version="1.0" encoding="utf-8"?><!--
   Sample data extraction rules file; uncomment and customize as necessary.
   See https://developer.android.com/about/versions/12/backup-restore#xml-changes
   for details.
-->
<data-extraction-rules>
    <cloud-backup>
        <!-- TODO: Use <include> and <exclude> to control what is backed up.
        <include .../>
        <exclude .../>
        -->
    </cloud-backup>
    <!--
    <device-transfer>
        <include .../>
        <exclude .../>
    </device-transfer>
    -->
</data-extraction-rules>

--- app\src\test\java\com\miabue\app

// >>> ExampleUnitTest.java
package com.miabue.app;

import org.junit.Test;

import static org.junit.Assert.*;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class ExampleUnitTest {
    @Test
    public void addition_isCorrect() {
        assertEquals(4, 2 + 2);
    }
}

--- gradle

// >>> libs.versions.toml
[versions]
agp = "8.11.1"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.1"
material = "1.12.0"

[libraries]
junit = { group = "junit", name = "junit", version.ref = "junit" }
ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }



--- gradle\wrapper

// >>> gradle-wrapper.properties
#Sun Jul 27 23:05:12 BOT 2025
distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
distributionUrl=https\://services.gradle.org/distributions/gradle-8.13-bin.zip
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists


